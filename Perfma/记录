1. JVM 内存模型？  
方法区。存类模型，类加载时在此处寻找符号。常量等。// 存虚拟机加载的类信息，常量，static变量。  
堆区。存放类实例，线程共享。  
// 线程私有区  
虚拟机栈区。函数调用，局部变量，数据引用指针。线程私有。  
本地方法栈区。提供给native方法的栈区。  
计数器(线程私有，记录当前指令运行位置。  
  
2. Java 多线程锁同步？  
CountDownlatch。  
Condition。  
重入锁。  

3. 想要多个线程同时发请求，全部返回完再干其他活，怎么办？  
CountDownlatch(n)，wait 完成后进行活动。  

4. 读写锁作用？  
多线程可并发读同一个数据。  
写操作会导致读互斥嘛？  
会。  

5. Concurrent 类原理？  
native 方法提供的原子性命令 CAS，乐观情况假设读取大于修改，数据不一致时则自旋，避免线程调度导致内核态切换的效率损失。增加了 CPU 的损耗。

6. 走楼梯，可以一次一步，也可以一次两步，一共有多少走法。
确认终止条件，写出递归公式 f(n) = f(n - 1) + f(n - 2)。  

7. Spring IOC, DI 简单讲一下。
Bean 生命周期由框架统一生成控制，不需用户手动生成，只需声明。
依赖关系也通过框架统一掌控，增加效率。

8. 索引作用。  
增加查询效率。  

9. 建立索引原则。
最左匹配。 
区分度高的列作为索引。

10. Select xxx where ...... 情况下用的到索引吗？什么情况下用不到?
不确定....
// 最左前缀匹配原则，mysql会一直向右匹配直到遇到范围查询(>、<、between、like)就停止匹配，比如a 1="" and="" b="2" c=""> 3 and d = 4 如果建立(a,b,c,d)顺序的索引，d是用不到索引的，如果建立(a,b,d,c)的索引则都可以用到，a,b,d的顺序可以任意调整。

11. 乱序的情况下能用到索引吗？
能，mysql有优化。
// =和in可以乱序，比如a = 1 and b = 2 and c = 3 建立(a,b,c)索引可以任意顺序，mysql的查询优化器会帮你优化成索引可以识别的形式

12. MVVM 的作用？
不清楚.... 记得和事务相关。 // 

13. 性能接触过吗？
没接触过。  

